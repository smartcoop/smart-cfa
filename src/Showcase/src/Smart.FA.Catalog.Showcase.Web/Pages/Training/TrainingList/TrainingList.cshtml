@page
@model Smart.FA.Catalog.Showcase.Web.Pages.Training.TrainingList.TrainingListModel

@{
    ViewData["Title"] = "TrainingList";
    Layout = Routes.Layout;
}

<section class="main__presentation">
    <div class="main-title">@ShowcaseResources.TrainingList_Title</div>
    <div class="main__presentation-txt">
        @ShowcaseResources.TrainingList_presentation
    </div>
</section>
<section class="section__training-search">
    @*TO DO: include search bar*@
    @*TO DO: include training search filters*@
</section>

<section class="section__training-list">
    @foreach (var training in Model.Trainings)
    {
       @await Html.PartialAsync("Shared/_TrainingTitle", training)
    }

    @if (Model.Trainings is not null && Model.Trainings.Any())
    {
        <div class="u-spacer-xl">
            <div class="c-toolbar">
                <div class="c-toolbar__left">
                    @if (Model?.Trainings?.HasPreviousPage ?? false)
                    {
                        <a asp-page="@Routes.TrainingList" asp-route-CurrentPage="@(Model.CurrentPage - 1)">@ShowcaseResources.Previous</a>
                    }
                </div>

                <div>Page @(Model.CurrentPage)/@(Model?.Trainings?.TotalPages ?? 0)</div>
                <div class="c-toolbar__right">
                    @if (Model?.Trainings?.HasNextPage ?? false)
                    {
                        <a asp-page="@Routes.TrainingList" asp-route-CurrentPage="@(Model.CurrentPage + 1)">@ShowcaseResources.Next</a>
                    }
                </div>
            </div>
        </div>
    }
</section>
