// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using Smart.FA.Catalog.Showcase.Domain.Models;

#nullable disable

namespace Smart.FA.Catalog.Showcase.Infrastructure.Data;

public partial class CatalogShowcaseContext : DbContext
{
    public CatalogShowcaseContext(DbContextOptions<CatalogShowcaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TrainingDetails> TrainingDetails { get; set; }
    public virtual DbSet<TrainingList> TrainingList { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<TrainingDetails>(entity =>
        {
            entity.HasKey(x => new { x.TrainingId, x.TrainingLanguage, x.TrainingTopicId });

            entity.ToView("v_TrainingDetails");

            entity.Property(e => e.TrainerFirstName)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("FirstName");

            entity.Property(e => e.TrainerLastName)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("LastName");

            entity.Property(e => e.TrainingGoal)
                .HasMaxLength(1500)
                .HasColumnName("Goal");

            entity.Property(e => e.TrainingId).HasColumnName("Id");

            entity.Property(e => e.TrainingLanguage)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("Language")
                .IsFixedLength(true);

            entity.Property(e => e.TrainingMethodology)
                .HasMaxLength(1500)
                .HasColumnName("Methodology"); 

            entity.Property(e => e.TrainingPracticalModalities)
                .HasMaxLength(1000)
                .HasColumnName("PracticalModalities");

            entity.Property(e => e.TrainingStatusId).HasColumnName("StatusId");

            entity.Property(e => e.TrainingTitle)
                .IsRequired()
                .HasMaxLength(500)
                .HasColumnName("Title");
        });

        modelBuilder.Entity<TrainingList>(entity =>
        {
            entity.HasKey(x => new { x.TrainingId, x.TrainingLanguage, x.TrainingTopic });

            entity.ToView("v_TrainingList");

            entity.Property(e => e.TrainerFirstName)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("FirstName");

            entity.Property(e => e.TrainerLastName)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("LastName");

            entity.Property(e => e.TrainingId).HasColumnName("Id");

            entity.Property(e => e.TrainingLanguage)
                .IsRequired()
                .HasMaxLength(2)
                .HasColumnName("Language")
                .IsFixedLength(true);

            entity.Property(e => e.TrainingStatus).HasColumnName("StatusId");

            entity.Property(e => e.TrainingTitle)
                .IsRequired()
                .HasMaxLength(500)
                .HasColumnName("Title");

            entity.Property(e => e.TrainingTopic).HasColumnName("TrainingTopicId");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
