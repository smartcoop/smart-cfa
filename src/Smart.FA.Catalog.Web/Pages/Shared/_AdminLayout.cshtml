@using Web.Pages.Admin
@using Core.SeedWork
<!DOCTYPE html>
<html class="u-maximize-height" dir="ltr" lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://design.smart.coop/css/main.css"/>
</head>
<body class="u-maximize-height u-overflow-hidden">
<div class="c-app-layout">
    <header class="u-position-relative">
        <div class="c-navbar c-navbar--scrollable c-navbar--bordered-bottom">
            <div class="c-toolbar">
                <div class="c-toolbar__left">
                    <div class="c-toolbar__item">
                        <div class="c-brand c-brand--xsmall">
                            <a href="/">
                                <img src="https://design.smart.coop/images/logo.svg" alt="Smart">
                            </a>
                        </div>
                    </div>
                </div>
                <div class="c-toolbar__right">
                    <div class="c-toolbar__item">
                        <a class="c-user-navigation" href="#" data-menu="userMenu">
                            <div class="c-avatar c-avatar--img">
                                <img src="https://i1.sndcdn.com/avatars-000304411295-zx2krs-t200x200.jpg" alt="avatar">

                            </div>
                        </a>
                        <ul class="c-menu c-menu--large" id="userMenu">
                            <li class="c-menu__item">
                                <a class="c-menu__label" href="/admin/myprofile">My profile</a>
                            </li>
                            <li class="c-menu__divider" role="presentational"></li>
                            <li class="c-menu__item">
                                <a class="c-menu__label" href="#">Sign out</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main class="u-maximize-width u-scroll-wrapper">
        <div class="c-app-layout-inner">
            <div class="c-app-layout-inner__sidebar">
                <ul class="c-side-menu">
                    @foreach (var sideMenuItem in Enumeration.GetAll<SideMenuItem>())
                    {
                        <li class="c-side-menu__item @((SideMenuItem) ViewData[nameof(SideMenuItem)]! == sideMenuItem ? "c-side-menu__item--active" : "")">
                            <a class="c-side-menu__link" href="@sideMenuItem.Href">@sideMenuItem.Name</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="c-app-layout-inner__content">
                <div class="u-scroll-wrapper">
                    @if (IsSectionDefined("HeaderToolbar"))
                    {
                        <div class="c-navbar c-navbar--bordered-bottom">
                            @await RenderSectionAsync("HeaderToolbar", false)
                        </div>
                    }
                    <div class="u-scroll-wrapper-body">
                        <smart-spacer all="ExtraLarge">
                                @RenderBody()
                        </smart-spacer>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<script src="https://design.smart.coop/js/bundle-prototype.js"></script>
<script src="https://design.smart.coop/js/bundle-client.js"></script>
<script src="~/js/lib.js"></script>

<script>
        window.addEventListener('load',
            function() {
                var elem = document.getElementById('@ViewData["SelectedSideMenuItem"]');
                //elem.classList.add("c-side-menu__item--active");

                var elementsInError = document.getElementsByClassName('c-input--error');
                if (elementsInError.length) {
                    var firstInvalidControl = elementsInError[0];
                    var labelOffset = 500;
                    window.scroll({
                        top: (firstInvalidControl.getBoundingClientRect().top + window.scrollY - labelOffset),
                        left: 0,
                        behavior: "smooth"
                    });
                    firstInvalidControl.focus();
                };
            });
    </script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
